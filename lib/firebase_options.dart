// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDNT2r2ZFJhctc9CeFW13rtlO5MijdYa6w',
    appId: '1:84428293064:android:ea474c1683df69bd13b6fd',
    messagingSenderId: '84428293064',
    projectId: 'klomi-e9d9c',
    storageBucket: 'klomi-e9d9c.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDkJp3hMuBaGb3mPk3Rlz5DsWiuj488z7s',
    appId: '1:99070824124:ios:cb00c59b51cf441e41cab9',
    messagingSenderId: '99070824124',
    projectId: 'klomi-57b50',
    storageBucket: 'klomi-57b50.appspot.com',
    androidClientId:
        '99070824124-0ja1b9b9e2a0gdfidd2afo3dfs8chu0h.apps.googleusercontent.com',
    iosClientId:
        '99070824124-ipf9ma8pfvcibkptdh4lmi7l0teresc2.apps.googleusercontent.com',
    iosBundleId: 'com.app.klomi',
  );
}


// Variant: debug
// Config: debug
// Store: C:\Users\SystemName\.android\debug.keystore
// Alias: AndroidDebugKey
// MD5: 32:BC:43:C4:5C:17:A4:EC:D3:26:14:E2:2F:B2:B8:B9
// SHA1: 12:17:FA:AC:38:45:21:53:92:88:B2:73:FF:91:8F:D0:6B:C1:AE:32
// SHA-256: 10:36:7D:59:6F:94:60:D7:1E:97:9A:9C:11:D3:92:E7:AE:95:17:CF:32:9C:BF:31:50:F6:58:ED:D2:29:C4:19
// Valid until: Friday, September 20, 2052
// ----------
// Variant: release
// Config: release
// Store: D:\projects\klomi-klomi\klomi-klomi\android\app\key.jks
// Alias: key
// MD5: E6:0C:D1:E5:28:53:F0:52:7D:A7:1D:00:2E:DC:4C:FB
// SHA1: 83:9C:7D:6A:73:FC:0C:AB:2A:5F:B8:87:0D:1B:12:8D:CC:8D:5F:37
// SHA-256: 8A:C9:35:F6:11:11:A3:59:59:D1:67:BA:6C:0A:1A:46:3A:B1:79:FC:2E:B3:C5:E3:E5:45:19:93:CF:92:A7:F3
// Valid until: Wednesday, December 13, 2045